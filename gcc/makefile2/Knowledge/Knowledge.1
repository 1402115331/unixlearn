-----------------------------------
***Makefile里的内容***
	1.显示规则，按照三段式写出完整的规则
	2.隐晦规则，不完整的三段式由make推倒具体的工作放肆
	3.变量定义，基本都是字符串
	4.Makefile中嵌入Makefile
	5.注释只存在单行注释#
	!!Makefile的command一定要以Tab键开始

-----------------------------------
***Makefile的文件名***
	1.默认的查找顺序是GNUmakefile makefile Makefile
	2.其中GNUmakefile的局限性最大最不推荐，推荐Makefile
	3.可以使用任意的名字，但必须用make -f filename 指定

-----------------------------------
***Makefile的引入***
	1.makefile的引入基本上完全就是gcc的引入头文件的修改版
	2.虽然不同于c的include有""和<>两种写法，makefile只有一种就是什么也不带的不带“”也不带<>，但是make只是去掉的形式，没有去掉本质，如果没有指定绝对地址被指定就从当前目录开始逐层搜索，如果指定了就按照指定的来，也可以用-I指定需要make查找的位置
	3.和gcc相对应make也可以使用环境变量中的值MAKEFILES，但是不推荐

-----------------------------------
***make的工作方式***
	1.读入所有的Makefile
	2.读入include的其他Makefile
	3.初始化文件中的变量
	4.推导隐晦规则，分析所有规则
	5.为所有的目标文件创建依赖关系链
	6.根据依赖关系，决定哪些目标需要重新生成
	7。执行生成命令

-----------------------------------
***哪些地方可以使用通配符***
	1.include 可以使用变量也可以使用通配符
	2.targets 可以使用变量也可以使用通配符
	3.


-----------------------------------
***command的位置***
	1.一般的写法，command和targets:依赖不在一行，并且使用一个Tab(4的空格)来使用
	2.如果写在一行则需要用 分号分隔



-----------------------------------
***我们使用规则只需要告诉make连个基本点***
	1.文件的依赖关系是什么
	2.如何生成文件（具体生成由gcc负责）


-----------------------------------
***注意点***
	1.命令太长可以用\来换行，其实在vim里编辑好像这是多余的啊（在别的文本编辑器中这就是个问题啦）不知道为什么我没有实验成功！！
	2.































