进程的管理和面向对象的管理是很类似的
无论是对象还是进程表现在计算机中都是资源的占用，不同的是面型对象实在析构函数中
把资源完全释放的，而进程则不同
这里很关键的是虽然面向对象中有析构函数，但只是释放一些必要的资源，对象本身的清理还是需要专门的进程管理的。
同理对于进程exit就如同面向对象的析构函数，因为exit会做的事情就是清除信号处理函数、关闭文件描述符、设置子进程的父进程为init 等这些关闭前的操作，之后即使调用了eixt，进程还是要把自己的状态标记为zombile（僵尸进程的），虽然调用了eixt但仍然是僵尸进程，仍然需要父进程通过wait4释放task_struct等资源，或者有系统的init自动调用wait4来清理资源。注意，exit或return的时候只是清理必要的资源，task_struct的那些统计信息会通过父进程清理的方式最终传道给init 
可以看出，这种资源清理方式本身也是资源使用情况统计报告！
